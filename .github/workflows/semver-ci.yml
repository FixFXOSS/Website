name: Release CI

on:
    workflow_dispatch:
        inputs:
            semver:
                description: 'Select version bump type: major, minor, patch'
                required: false
                default: 'patch'
                type: choice
                options:
                  - major
                  - minor
                  - patch
            prerelease:
                description: 'Pre-release identifier (e.g., alpha, beta, rc.1). Leave empty for stable releases.'
                required: false
                default: ''
            custom_version:
                description: 'Specify a custom version. This will override the semver and prerelease inputs.'
                required: false
                default: ''
            release_notes:
                description: 'Release notes for this version'
                required: false
                default: ''
            create_release:
                description: 'Create a GitHub release'
                type: boolean
                required: false
                default: true

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Set Git identity
              run: |
                  git config --local user.email "toxic.dev09@gmail.com"
                  git config --local user.name "Toxic Dev"

            - name: Get current version
              id: current_version
              run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Version bump
              id: version_bump
              run: |
                  if [ -n "${{ github.event.inputs.custom_version }}" ]; then
                    NEW_VERSION="${{ github.event.inputs.custom_version }}"
                    npm version $NEW_VERSION -m "Bump version to %s [skip ci]"
                    echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
                  elif [ -n "${{ github.event.inputs.semver }}" ]; then
                    if [ -z "${{ github.event.inputs.prerelease }}" ]; then
                      NEW_VERSION=$(npm version ${{ github.event.inputs.semver }} -m "Bump version to %s [skip ci]")
                      echo "new_version=${NEW_VERSION:1}" >> $GITHUB_OUTPUT
                    else
                      NEW_VERSION=$(npm version ${{ github.event.inputs.semver }} --preid=${{ github.event.inputs.prerelease }} -m "Bump version to %s [skip ci]")
                      echo "new_version=${NEW_VERSION:1}" >> $GITHUB_OUTPUT
                    fi
                  else
                    NEW_VERSION=$(npm version patch -m "Bump version to %s [skip ci]")
                    echo "new_version=${NEW_VERSION:1}" >> $GITHUB_OUTPUT
                  fi

            - name: Generate changelog
              id: changelog
              if: github.event.inputs.create_release == 'true'
              run: |
                if [ -n "${{ github.event.inputs.release_notes }}" ]; then
                  echo "${{ github.event.inputs.release_notes }}" > CHANGELOG.md
                else
                  echo "## What's Changed" > CHANGELOG.md
                  git log --pretty=format:"* %s" ${{ steps.current_version.outputs.version }}..HEAD >> CHANGELOG.md
                fi
                echo "changelog<<EOF" >> $GITHUB_OUTPUT
                cat CHANGELOG.md >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT

            - name: Push changes
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ secrets.GIT_TOKEN }}
                  branch: ${{ github.ref }}
                  tags: true

            - name: Create GitHub Release
              if: github.event.inputs.create_release == 'true'
              uses: softprops/action-gh-release@v1
              with:
                tag_name: v${{ steps.version_bump.outputs.new_version }}
                name: Release v${{ steps.version_bump.outputs.new_version }}
                body: ${{ steps.changelog.outputs.changelog }}
                draft: false
                prerelease: ${{ github.event.inputs.prerelease != '' }}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}